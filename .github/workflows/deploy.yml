name: github-trendu dev CI/CD Pipeline

on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # JDK 설치
      - name: Set up JDK 22
        uses: actions/setup-java@v1
        with:
          java-version: 22

#      # AWS 인증
#      - name: configure aws credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: ${{ secrets.AWS_ROLE_NAME }}
#          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # 빌드 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle Build
      - name: Build with Gradle
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

        run: ./gradlew build

      # DockerHub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # DockerHub Push
      - name: Build and Push Docker image
        run: |
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_HUB_USERNAME }}/github-trendu-dev .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/github-trendu-dev

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # AWS 배포
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd github-trendu
            sudo docker stop github-trendu-dev
            sudo docker rm github-trendu-dev
            sudo docker run --env-file .env -d -p 8080:8080 --name github-trendu-dev gbtwld/github-trendu-dev

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32